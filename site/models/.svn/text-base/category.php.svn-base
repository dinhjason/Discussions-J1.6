<?php
/*
 * models/category.php
 *
 * Autor: Achim Fischer
 *
 */



// Check to ensure this file is included in Joomla!
defined('_JEXEC') or die( 'Restricted access' );

jimport('joomla.application.component.model');

require_once(JPATH_COMPONENT.DS.'classes/user.php');


/** 
 * Discussions Category Model 
 */ 
class DiscussionsModelCategory extends JModel { 

	
     
	/**
	 * thread List array
	 *
	 * @var array
	 */
	var $_data = null;


	/**
	 * category total
	 *
	 * @var integer
	 */
	var $_total = null;


	/**
	 * category id
	 *
	 * @var integer
	 */
	var $_categoryId = 0;


	/**
	 * category name
	 *
	 * @var String
	 */
	var $_categoryName = null;


	/**
	 * category alias
	 *
	 * @var String
	 */
	var $_categoryAlias = null;


	/**
	 * category slug
	 *
	 * @var String
	 */
	var $_categorySlug = null;


	/**
	 * category description
	 *
	 * @var String
	 */
	var $_categoryDescription = null;


	/**
	 * category image
	 *
	 * @var String
	 */
	var $_categoryImage = null;


	/**
	 * private status
	 *
	 * @var integer
	 */
	var $_privateStatus = null;


	/**
	 * exist status
	 *
	 * @var integer
	 */
	var $_existStatus = null;


	/**
	 * Constructor
	 *
	 * @since 1.5
	 */
	function __construct() {
		global $mainframe;

		parent::__construct();

		$config = JFactory::getConfig();

		// Get the pagination request variables
		$this->setState('limit', $mainframe->getUserStateFromRequest('com_discussions.limit', 'limit', $config->getValue('config.list_limit'), 'int'));
		$this->setState('limitstart', JRequest::getVar('limitstart', 0, '', 'int'));

	}



	/** 
     * Gets Threads data 
     * 
     * @return array 
     */ 
     function getThreads() { 
          
		global $mainframe;
          
     	$_catid = JRequest::getVar('catid', 0);


     	if ( $this->getExistStatus() != null ) { // check if this category exists
     	
     		// 1. check if this is a private (moderator only) forum
    	 	if ( $this->getPrivateStatus() == 1 ) {
     	
     			// 2. if it is private -> check if this user is a moderator
				$user =& JFactory::getUser();
				$logUser = new CUser( $user->id);
     	
				if ( $logUser->isModerator() == 0) {	// user is not moderator -> kick him out of here
					$redirectLink = JRoute::_( "index.php?option=com_discussions");
					$mainframe->redirect( $redirectLink, "You don't have access to this forum!", "notice");			
     			}
     	
     		}
     
          
        	$db =& $this->getDBO(); 

			// Load threads if they doesn't exist
			if (empty($this->_data)) {
				$selectQuery = $this->_buildSelectQuery();

    	        $limitstart = $this->getState('limitstart');
 	           $limit = $this->getState('limit');
	
				$this->_data = $this->_getList( $selectQuery, $limitstart, $limit);
			}
		
        	// return the category list data 
        	return $this->_data;    
        
        }
        else { // category does not exist
			$redirectLink = JRoute::_( "index.php?option=com_discussions");
			$mainframe->redirect( $redirectLink, "This forum does not exist!", "notice");
        }
        
        
     } 



	/**
	 * Method to get the total number of threads in this category
	 *
	 * @access public
	 * @return integer
	 */
	function getTotal() {
		if (empty($this->_total)) {
			$countQuery = $this->_buildCountQuery();
			$this->_total = $this->_getListCount($countQuery);
		}

		return $this->_total;
	}



	/**
	 * Method to get a pagination object
	 *
	 * @access public
	 * @return integer
	 */
	function getPagination() {
		if (empty($this->_pagination)) {
			jimport('joomla.html.pagination');
			$this->_pagination = new JPagination( $this->getTotal(), $this->getState('limitstart'), $this->getState('limit') );
		}

		return $this->_pagination;
	}



	function _buildSelectQuery() {
     	$_catid = JRequest::getVar('catid', 0);

        $db =& $this->getDBO();

		$selectQuery = "SELECT id, parent_id, cat_id, thread, user_id, subject, 
							CASE WHEN CHAR_LENGTH(alias) THEN CONCAT_WS(':', id, alias) ELSE id END as slug,		
							type, DATE_FORMAT( date, '%d.%m.%Y %k:%i') AS date,
                    		counter_replies, DATE_FORMAT( last_entry_date, '%d.%m.%Y %k:%i') AS last_entry_date,
                    		last_entry_user_id, hits, locked, sticky, published
						FROM ".$db->nameQuote('#__discussions_messages')."
						WHERE cat_id='".$_catid."' AND parent_id='0' AND published='1'
						ORDER BY sticky DESC, last_entry_msg_id DESC";

        return $selectQuery;
	}



	function _buildCountQuery() {
     	$_catid = JRequest::getVar('catid', 0);

        $db =& $this->getDBO();

		$countQuery = "SELECT * FROM ".$db->nameQuote('#__discussions_messages')." WHERE cat_id='".$_catid."' AND parent_id='0' AND published='1'";
		return $countQuery;
	}



	/**
	 * Method to get the id of this category
	 *
	 * @access public
	 * @return integer
	 */
	function getCategoryId() {
     	$this->_categoryId = JRequest::getVar('catid', 0);

		list( $this->_categoryId, $this->_categoryAlias) = explode(':', $this->_categoryId, 2);     	
     	
		return $this->_categoryId;
	}


	/**
	 * Method to get the slug of this category
	 *
	 * @access public
	 * @return string
	 */
//	function getCategorySlug() {
//     	$this->_categoryId = JRequest::getVar('catid', 0);
//
//		return $this->_categoryId;
//	}
	function getCategorySlug() {
     	$this->_categorySlug = JRequest::getVar('catid', 0);

		return $this->_categorySlug;
	}



	/**
	 * Method to get the name of this category
	 *
	 * @access public
	 * @return String
	 */
	function getCategoryName() {
		if ( empty( $this->_categoryName)) {
            $_catid = JRequest::getVar('catid', 0);

            $db =& $this->getDBO();

            $categoryNameQuery = "SELECT name FROM ".$db->nameQuote( '#__discussions_categories')." WHERE id='".$_catid."'";

            $db->setQuery( $categoryNameQuery);
            $this->_categoryName = $db->loadResult();
		}
		return $this->_categoryName;
	}


	/**
	 * Method to get the description of this category
	 *
	 * @access public
	 * @return String
	 */
	function getCategoryDescription() {
		if ( empty( $this->_categoryDescription)) {
            $_catid = JRequest::getVar('catid', 0);

            $db =& $this->getDBO();

            $categoryDescriptionQuery = "SELECT description FROM ".$db->nameQuote( '#__discussions_categories')." WHERE id='".$_catid."'";

            $db->setQuery( $categoryDescriptionQuery);
            $this->_categoryDescription = $db->loadResult();
		}
		return $this->_categoryDescription;
	}


	/**
	 * Method to get the image of this category
	 *
	 * @access public
	 * @return String
	 */
	function getCategoryImage() {
		if ( empty( $this->_categoryImage)) {
            $_catid = JRequest::getVar('catid', 0);

            $db =& $this->getDBO();

            $categoryImageQuery = "SELECT image FROM ".$db->nameQuote( '#__discussions_categories')." WHERE id='".$_catid."'";

            $db->setQuery( $categoryImageQuery);
            $this->_categoryImage = $db->loadResult();
		}
		return $this->_categoryImage;
	}



	/**
	 * Method to get the private status of this category
	 *
	 * @access public
	 * @return integer
	 */
	function getPrivateStatus() {
		if ( empty( $this->_privateStatus)) {
            $_catid = JRequest::getVar('catid', 0);

            $db =& $this->getDBO();

            $sql = "SELECT private FROM ".$db->nameQuote( '#__discussions_categories')." WHERE id='".$_catid."'";

            $db->setQuery( $sql);
            $this->_privateStatus = $db->loadResult();
		}
		return $this->_privateStatus;
	}



	/**
	 * Method to check if this category exists
	 *
	 * @access public
	 * @return integer
	 */
	function getExistStatus() {
		if ( empty( $this->_existStatus)) {
            $_catid = JRequest::getVar('catid', 0);

            $db =& $this->getDBO();

            $sql = "SELECT parent_id FROM ".$db->nameQuote( '#__discussions_categories')." WHERE id='".$_catid."' AND parent_id<>'0'";

            $db->setQuery( $sql);
            $this->_existStatus = $db->loadResult();
		}
		return $this->_existStatus;
	}


} 


?>

